# -*- coding: utf-8 -*-
"""Copy of 02_Python_Basics_Part 2_Learner.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aBS5tWTFTsEGcMntW4-v-u6mF6rz9AL8

<div class="small-12 large-6 columns">

<h1>Shortcut operators</h1>


<p>It's time for the next set of operators that make a developer's life easier.</p>

<p>Very often, we want to use one and the same variable both to the right and left sides of the <code>=</code> operator.</p>

<p>For example, if we need to calculate a series of successive values of powers of 2, we may use a piece like this:</p>

<code class="codep ">x = x * 2</code>

<br>

<p>You may use an expression like this if you can't fall asleep and you're trying to deal with it using some good, old-fashioned methods:</p>

<code class="codep ">sheep = sheep + 1</code>

<br>

<p>Python offers you a shortened way of writing operations like these, which can be coded as follows:</p>



```
x *= 2
sheep += 1
```
<br>

</div>
"""



"""<div class="small-12 large-6 columns">

<h1></h1>

<p>Let's try to present a general description for these operations.</p>

<p>If <code>op</code> is a two-argument operator (this is a very important condition) and the operator is used in the following context:</p>

<code class="codep ">variable = variable <mark style="background-color:#e6f2ff;">op</mark> expression</code>

<br>

<p>It can be simplified and shown as follows:</p>

<code class="codep ">variable <mark style="background-color:#e6f2ff;">op</mark>= expression</code>

<br>


<p>Take a look at the examples below. Make sure you understand them all.</p>


<p><code>i = i + 2 * j</code>   ⇒   <code>i <mark style="background-color:#e6f2ff;">+=</mark> 2 * j</code></p>
<p><code>var = var / 2</code>   ⇒   <code>var <mark style="background-color:#e6f2ff;">/=</mark> 2</code></p>
<p><code>rem = rem % 10</code>   ⇒   <code>rem <mark style="background-color:#e6f2ff;">%=</mark> 10</code></p>
<p><code>j = j - (i + var + rem)</code>   ⇒   <code>j <mark style="background-color:#e6f2ff;">-=</mark> (i + var + rem)</code></p>
<p><code>x = x ** 2</code>   ⇒   <code>x <mark style="background-color:#e6f2ff;">**=</mark> 2</code></p>

<br>

</div>

## Comparison Operators
[Python Comparison Operators- W3School](https://www.w3schools.com/python/python_operators.asp#:~:text=Python%20Comparison%20Operators)
"""

#experimenting with comparison operators
#remember that thr outcome of comparison is always a boolean (false or true) value

a = 10
b = 20

print(f"Does a equals b:\t {a == b}")
print(f"Does a not equals b: \t {a != b}")
print(f"Is a greater than b: \t {a > b}")
print(f"Is a less than b: \t {a < b}")
print(f"Is a greater than or equal to b: \t {a >= b}")
print(f"Is a less than or equal to b: \t {a <= b}")

print(2==3)

print(2==2)

my_number = 60
print(my_number==60)
print(my_number==62)

print(my_number>60)

print(my_number>59)

print(my_number<96)

print(my_number>=60)

print(my_number<=60)

temperature = 19
print(temperature>20)

"""#### not equal operator"""

print(2 != 3)

#unlike sql python doesnt accept <>
print(2 <> 3)

print(temperature != 20)

print(temperature != 19)

"""##### Exercise: Take two number from a user, compare and return result."""

number1 = float(input("Please enter your first number:"))
number2 = float(input("Please enter your second number:"))
print("is ", number1, "greater than", number2, number1>number2)
print(number1, "is less than", number2, number1<number2)
print(number1, "is equal to", number2, number1==number2)

num = 300
if num > 0:
    print(num, "is a positive number")
elif num < 0:
    print(num, "is a negative number")
else:
    print(num, "is zero")

# prompt: show an example of comparison operator using

x = 10
y = 5

print(x > y)  # Output: True
print(x != y) #output: True
print(x < y) #output: False
print(x <= y) #output: False
print(x == y) #output: False

# show an example of comparison operator using >
x = 10
y = 5

print(x > y)  # Output: True

"""# Over to you - Exercise - Lab

Using one of the comparison operators in Python, write a simple two-line program that takes the parameter n as input, which is an integer, and prints False if n is less than 100, and True if n is greater than or equal to 100.

"""

# prompt: show an example of comparison operator using

x = 10
y = 5

print(x < y)  # Output: False

#two line program

n = int(input("Enter a number: "))
print(n >= 100)

"""## Solution"""

n = int(input("Enter a number: "))
print(n >= 100)

"""#Algorithm

[Algorithm BBC](https://www.bbc.co.uk/bitesize/topics/z3tbwmn/articles/z3whpv4)

# If Statement

[Python Flow Control - If Statements](https://www.toppr.com/guides/python-guide/tutorials/python-flow-control/if-elif-else/python-if-if-else-if-elif-else-and-nested-if-statement/
)

You can also watch the videos and Follow along.

if statements in python allows the programme to run a piece of code based on the outcome of the conditions. Conditions are usually the comparison operators.

In real life, we make these kind of decisions all the time such as:

    if the temperature is hot, turn on the fan.
    if it is raining, take umbrella.
"""

#using if, lets check whether a number is positive or not?
num = int(input("Enter a number: "))

if num > 0:
  print(num, "is a number")

#in the previous example, it doesn't account what happens if the number wasn't positional (if the condition is false)
num = float(input("Enter a number: "))

if num > 0:
  print(num, "thats a positive number")
else:
  print("thats a negative number")

#elif is for than one condition
bird = str(input("what animal is that? "))

if bird == "parrot":
  print("this", bird, "is bereft of life")
elif bird == "human":
  print(bird, "\b, the most deadliest of animals")
else:
  print(bird, "\b? that's a nice", bird)

temp = int(input("What is the temperature outside? "))

if temp > 25:
  print("Cor, it's hot out today")
elif 18 <= temp <= 25:
  print("Cor, it's nice out today")
else:
  print("Freezing innit?!")

"""###Follow along exercises for you to practice"""

#21a for you to complete
annualSales = 600000
if annualSales >= 500000:
# add print statements here
  print("God Customer")
  print("Thank you for your business")

#21b for you to complete, please add the two elif statements as you saw in the video
annualSales = 300000
if annualSales >= 500000:
    print("Gold Customer")
print("Thank you for your business")

#21c Else for you to complete
annualSales = 300000
if annualSales >= 500000:
    print("Gold Customer")
elif annualSales >= 300000:
    print("Silver Customer")
elif annualSales >= 100000:
    print("Bronze Customer")
print("Thank you for your business")

annualsales = int(input("What is your annual sales? "))
region = str(input("Which region are you in? "))

if annualsales >= 500000:
    print("Platinum Customer")
elif annualsales >= 300000:
    print("Gold Customer")
    if region == "East":
        print("Send a paddle")
    elif region == "West":
        print("Send a tuna")
    else:
        print("Send a ring")
elif annualsales >= 100000:
    print("Silver Customer")
else:
    print("Bronze Customer")
    print("Think about upgrading")
print("Thank you for your business")

#21d Nested Statement for you to practice and follow along
annualSales = 300000
region = "North"

if annualSales >= 500000:
    print("Gold Customer")
elif annualSales >= 300000:
    print("Silver Customer")
#add if statement here



elif annualSales >= 100000:
    print("Bronze Customer")
print("Thank you for your business")

#21d Compund Statement for you to practice and follow along
annualSales = 300000
newCustomer = False

if annualSales >= 500000:
    print("Gold Customer")
elif annualSales >= 300000:
    print("Silver Customer")
#add compound conditional statement here

elif annualSales >= 100000:
    print("Bronze Customer")
print("Thank you for your business")

"""### More If statements for you to practice below"""

number1 = float(input("Please enter a number:"))
number2 = float(input("Please enter a number:"))

if number2>number1:
    print(number2, "is greater than", number1)

number1 = float(input("Please enter a number:"))
number2 = float(input("Please enter a number:"))

if number2>number1:
    print(number2, "is greater than", number1)
else:
    print(number2, "is not greater than", number1)

# Read two numbers
number1 = int(input("Enter the first number: "))
number2 = int(input("Enter the second number: "))

# Choose the larger number
if number1 > number2:
    larger_number = number1
else:
    larger_number = number2

# Print the result
print("The larger number is:", larger_number)

# Read two numbers
number1 = int(input("Enter the first number: "))
number2 = int(input("Enter the second number: "))

# Choose the larger number
if number1 > number2:
    print("The larger number is:", number1)

elif number2 > number1:
    print("The larger number is:", number2)

#elif :
#elif:

else:
    print(number1, "is equal to", number2)

"""You can add more elif conditions. But only 1 "if" and 1 "else".

#### Python Program to Check if a Number is Positive, Negative or Zero:
"""

num = float(input("Enter a number: "))


if num > 0:
    print("The number is positive.")
elif num < 0:
    print("The number is negative.")
else:
    print("The number is zero.")

"""#Loops

We are going to come back to loops after we go through 03_Python Collection Arrays

## While Loop
"""

i = 1
while i<6:
    print(i)
    i +=1

"""Write a code to print all even numbers from 0 to 100."""

my_number = 0
while my_number<=100:
    print(my_number)
    my_number +=2 #my_number = my_number +2

"""Write a code to print all number from 0 to 100 which divisible by 7. Hint: use if statement"""

my_number = 0
while my_number<=100:
    if my_number%7 == 0:
        print(my_number)
    my_number +=1



"""## For Loop"""

print("banana", "apple", sep=",")

fruits = ["apple", "banana", "berry"]
for x in fruits:
    print(x, end=".")

for x in "banana":
    print(x)

for x in "Yusuf":
    print(x, end="-")

for x in "12345":
  num = int(x)
  print(num+1)

print("Numbers from 1 to 50:")
for n in range(1, 51):
    print(n, end=" ")

"""Write a code to print all even numbers from 0 to 100. (use step argument)"""

print("Even numbers from 0 to 100:")
for n in range(0, 101, 2):
    print(n, end=" ")

"""Write a code to print all number from 0 to 100 which divisible by 7"""

print("Multiples of 7 from 0 to 100:")
for n in range(0, 101, 7):
    print(n, end=" ")

"""Write a code to print all odd numbers from 0 to 100. (use step argument)"""

print("Odd numbers from 1 to 100:")
for n in range(1, 101, 2):
    print(n, end=" ")

for n in range(0, 101):
    if n % 3 == 0 and n % 5 == 0:
        print("FizzBuzz")
    elif n % 3 == 0:
        print("Fizz")
    elif n % 5 == 0:
        print("Buzz")
    else:
        print(n)

#Task to print fizz or buzz or fizzbuzz

for n in range(1,101):
    if n%3==0 and n%5==0:
        print("\n",n,"-FizzBuzz", end="")
    elif n%3==0:
        print("\n",n,"-Fizz",end="")
    elif n%5==0:
        print("\n",n,"-Bizz",end="")
    else:
        print("\n",n,end=" ")

for num in range(1,101):
    string = ""
    if num % 3 == 0:
        string = string + "Fizz"
    if num % 5 == 0:
        string = string + "Buzz"
    if num % 5 != 0 and num % 3 != 0:
        string = string + str(num)
    print(string)



"""## Collection Types in Python

### List
"""

mylist = ["apple", "banana", "cherry"]

word = "happy"
mylist2 = list(word)


print(mylist)
print(mylist2)

print(type(mylist))

print(type(mylist2))

age = 32
mylist3 = list(age)

age = [32]
print(type(age))

customer_info = ["Mr.X", 22, "UK", "12/05/2001", 1.65]
print(customer_info)

customer_info

"""#### Indexing List"""

mylist1 = ["a", "b", 10, 20];

mylist2 = [1, 2, 3, 4, 5, 6, 7 ];

print("mylist1[1]: ", mylist1[1])

print ("mylist2[1:5]: ", mylist2[1:5])

"""how to get [2, 3, 4, 5] using negative indexing"""

print(mylist2[-4:-2])

"""mylist2 = [1, 2, 3, 4, 5, 6, 7 ];
          -7 -6 -5 -4 -3 -2 -1  
"""

print ("mylist2[1:5]: ", mylist2[-6:-2]) #last index in range -2 will not be printed

#What will be the output?
nums = [10, 20, 30, 40, 50, 60, 70, 80, 90]
some_nums = nums[2:7]
print(some_nums)

#Complete the code.

nums = [10, 20, 30, 40, 50, 60, 70, 80, 90]

print(nums[0:4])


#Output:
#10, 20,30,40

thislist = ["apple", "banana", "cherry"]

print(thislist)

thislist[1] = "blackcurrant"

print(thislist)

thislist[3]="watermelon"

print(thislist)

thislist.append("orange")

print(thislist)

print(thislist)

thislist.insert(2, "watermelon")

print(thislist)

thislist.sort()

print(thislist)

thislist.insert(5,"kiwi")

print(thislist)

thislist.insert(8,"kiwi")

print(thislist)

thislist.insert(7,"kiwi")

thislist.reverse()

print(thislist)

thislist = ["apple", "banana", "cherry"]
print(thislist)

thislist.pop(1)

print(thislist)

"""#### Exercise: Using the created above (thislist) add 5 more items into this list and then remove index from 2:5.."""

thislist = ["apple", "banana", "cherry"]
print("List before adding")
print(thislist)


thislist.append(["orange", "grape", "kiwi", "melon", "pear"])



print("List after adding 5 more items:")
print(thislist)



print("List after removing element at index 1:")
print(thislist)

thislist = ["apple", "banana", "cherry"]

newlist = ["mango","orange","plum","pineapple", "peach"]

thislist.extend(newlist)

print(thislist)

del thislist[2:5]

print(thislist)

thislist = ["apple", "banana", "cherry"]
print("Original list:", thislist)



print("After removing index 1:", thislist)

#thislist.pop(2:5) this will give error. pop method gets only 1 index value

thislist.append(["orange", "grape", "mango", "pineapple", "kiwi"])
print("After adding 5 items:", thislist)
thislist = thislist[:2] + thislist[5:]
print("After removing items from index 2 to 4:", thislist)

print(thislist)

"""### Tuple"""

mytuple = ("apple", "banana", "cherry")

print(mytuple)

print("1st index in mytuple:", mytuple[1])

#Write a code to display last item in mytuple.

#[10:05] Rahana Begum

mytuple = ("apple","banana","cherry")

print (mytuple)

print("1st index in mytuple:", mytuple[2])

print("Last index in my tuple:", mytuple[-1])

print("last index in mytuple:", mytuple[2])

#[10:06] Georgi Zlatev

print(mytuple[-1])

tuple_1 = (1, 2, 4, 8)
tuple_2 = 1., .5, .25, .125
print(tuple_1)
print(tuple_2)

my_tuple = (1, 10, 100, 1000)

print(my_tuple[0])
print(my_tuple[-1])
print(my_tuple[1:])
print(my_tuple[:-2])

for elem in my_tuple:
    print(elem)

for abc in my_tuple:
    print(abc)

my_tuple = (1, 10, 100)

t1 = my_tuple + (1000, 10000)

t2 = my_tuple * 3

print(t2)
print(len(t2))
print(t1)

print(10 in my_tuple)
print(-10 not in my_tuple)

print(len("my name is Yusuf"))

my_tuple = (101, 10, 100)


print(my_tuple)

"""### Set"""

mySet= {"apple", "banana", "cherry"}

print(mySet)

print(mySet[1])

mySet2= {"apple", "banana", "cherry", "apple", "banana"}

print(mySet2)

"""### Dictionary"""

mydict = {"brand": "Ford", #brand:key and ford:value
          "model": "Mustang",
          "year": 1964}
print(mydict)

print(mydict.get("brand"))

print(mydict.get("year")) #access 1964

print(mydict.get(1)) #access 1964

print(mydict.get("Ford"))

dictionary = {"cat": "chat", "dog": "chicken", "horse": "cheval"}

phone_numbers = {'boss': 5551234567, 'Suzy': 22657854310}

empty_dictionary = {}

print(dictionary)
print(phone_numbers)
print(empty_dictionary)

print(dictionary.keys())

print(dictionary.values())